{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCGA,IAAM,EAAa,AADF,EAAG,SAAS,gBAAgB,CAAC,OACnB,KAAK,CAAC,EAAG,GAE9B,EAAQ,EAAG,SAAS,gBAAgB,CAAC,OACrC,EAAU,EAAK,KAAK,CAAC,EAAG,EAAK,MAAM,CAAG,GAEtC,EAAY,SAAS,aAAa,CAAC,SAEzC,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EAEE,GAAI,EAAE,MAAM,GAAK,CAAU,CAAC,EAAE,CAAE,CAC9B,IAAM,EAAU,EAAQ,GAAG,CAAC,SAAC,CAA7B,EAAsC,MAAA,CACpC,QAAS,EACT,MAAO,EAAI,QAAQ,CAAC,EAAE,CAAC,WAAW,AACpC,C,GAEA,EAAQ,IAAI,CAAC,SAAC,CAAA,CAAG,CAAjB,EAAuB,OAAA,EAAE,KAAK,CAAC,aAAa,CAAC,EAAE,KAAK,C,GAEpD,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACE,EAAU,WAAW,CAAC,EAAK,OAAO,CACpC,EACF,CAGA,GAAI,EAAE,MAAM,GAAK,CAAU,CAAC,EAAE,CAAE,CAC9B,IAAM,EAAU,EAAQ,GAAG,CAAC,SAAC,CAA7B,EAAsC,MAAA,CACpC,QAAS,EACT,MAAO,EAAI,QAAQ,CAAC,EAAE,CAAC,WAAW,AACpC,C,GAEA,EAAQ,IAAI,CAAC,SAAC,CAAA,CAAG,CAAjB,EAAuB,OAAA,EAAE,KAAK,CAAC,aAAa,CAAC,EAAE,KAAK,C,GAEpD,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACE,EAAU,WAAW,CAAC,EAAK,OAAO,CACpC,EACF,CAGA,GAAI,EAAE,MAAM,GAAK,CAAU,CAAC,EAAE,CAAE,CAC9B,IAAM,EAAU,EAAQ,GAAG,CAAC,SAAC,CAA7B,EAAsC,MAAA,CACpC,QAAS,EACT,MAAO,EAAI,QAAQ,CAAC,EAAE,CAAC,WAAW,AACpC,C,GAEA,EAAQ,IAAI,CAAC,SAAC,CAAA,CAAG,CAAjB,EAAuB,OAAA,EAAE,KAAK,CAAC,aAAa,CAAC,EAAE,KAAK,C,GAEpD,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACE,EAAU,WAAW,CAAC,EAAK,OAAO,CACpC,EACF,CAGA,GAAI,EAAE,MAAM,GAAK,CAAU,CAAC,EAAE,CAAE,CAC9B,IAAM,EAAU,EAAQ,GAAG,CAAC,SAAC,CAA7B,EAAsC,MAAA,CACpC,QAAS,EACT,MAAO,WAAW,EAAI,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,YAAa,IACrE,C,GAEA,EAAQ,IAAI,CAAC,SAAC,CAAA,CAAG,CAAjB,EAAuB,OAAA,EAAE,KAAK,CAAG,EAAE,KAAK,A,GAExC,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACE,EAAU,WAAW,CAAC,EAAK,OAAO,CACpC,EACF,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar headers = _to_consumable_array(document.querySelectorAll(\"th\"));\nvar newHeaders = headers.slice(0, 4);\nvar rows = _to_consumable_array(document.querySelectorAll(\"tr\"));\nvar newRows = rows.slice(1, rows.length - 1);\nvar tableBody = document.querySelector(\"tbody\");\ndocument.addEventListener(\"click\", function(e) {\n    // if target name\n    if (e.target === newHeaders[0]) {\n        var rowData = newRows.map(function(row) {\n            return {\n                element: row,\n                value: row.children[0].textContent\n            };\n        });\n        rowData.sort(function(a, b) {\n            return a.value.localeCompare(b.value);\n        });\n        rowData.forEach(function(data) {\n            tableBody.appendChild(data.element);\n        });\n    }\n    // if target position\n    if (e.target === newHeaders[1]) {\n        var rowData1 = newRows.map(function(row) {\n            return {\n                element: row,\n                value: row.children[1].textContent\n            };\n        });\n        rowData1.sort(function(a, b) {\n            return a.value.localeCompare(b.value);\n        });\n        rowData1.forEach(function(data) {\n            tableBody.appendChild(data.element);\n        });\n    }\n    // if target age\n    if (e.target === newHeaders[2]) {\n        var rowData2 = newRows.map(function(row) {\n            return {\n                element: row,\n                value: row.children[2].textContent\n            };\n        });\n        rowData2.sort(function(a, b) {\n            return a.value.localeCompare(b.value);\n        });\n        rowData2.forEach(function(data) {\n            tableBody.appendChild(data.element);\n        });\n    }\n    // if target salary\n    if (e.target === newHeaders[3]) {\n        var rowData3 = newRows.map(function(row) {\n            return {\n                element: row,\n                value: parseFloat(row.children[3].textContent.replace(/[^0-9.-]/g, \"\"))\n            };\n        });\n        rowData3.sort(function(a, b) {\n            return a.value - b.value;\n        });\n        rowData3.forEach(function(data) {\n            tableBody.appendChild(data.element);\n        });\n    }\n});\n\n//# sourceMappingURL=index.57bfd99f.js.map\n","'use strict';\n\nconst headers = [...document.querySelectorAll('th')];\nconst newHeaders = headers.slice(0, 4);\n\nconst rows = [...document.querySelectorAll('tr')];\nconst newRows = rows.slice(1, rows.length - 1);\n\nconst tableBody = document.querySelector('tbody');\n\ndocument.addEventListener('click', (e) => {\n  // if target name\n  if (e.target === newHeaders[0]) {\n    const rowData = newRows.map((row) => ({\n      element: row,\n      value: row.children[0].textContent,\n    }));\n\n    rowData.sort((a, b) => a.value.localeCompare(b.value));\n\n    rowData.forEach((data) => {\n      tableBody.appendChild(data.element);\n    });\n  }\n\n  // if target position\n  if (e.target === newHeaders[1]) {\n    const rowData = newRows.map((row) => ({\n      element: row,\n      value: row.children[1].textContent,\n    }));\n\n    rowData.sort((a, b) => a.value.localeCompare(b.value));\n\n    rowData.forEach((data) => {\n      tableBody.appendChild(data.element);\n    });\n  }\n\n  // if target age\n  if (e.target === newHeaders[2]) {\n    const rowData = newRows.map((row) => ({\n      element: row,\n      value: row.children[2].textContent,\n    }));\n\n    rowData.sort((a, b) => a.value.localeCompare(b.value));\n\n    rowData.forEach((data) => {\n      tableBody.appendChild(data.element);\n    });\n  }\n\n  // if target salary\n  if (e.target === newHeaders[3]) {\n    const rowData = newRows.map((row) => ({\n      element: row,\n      value: parseFloat(row.children[3].textContent.replace(/[^0-9.-]/g, '')),\n    }));\n\n    rowData.sort((a, b) => a.value - b.value);\n\n    rowData.forEach((data) => {\n      tableBody.appendChild(data.element);\n    });\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","newHeaders","headers","document","querySelectorAll","rows","newRows","tableBody","querySelector","addEventListener","e","target","rowData","map","row","element","value","children","textContent","sort","a","b","localeCompare","forEach","data","appendChild","rowData1","rowData2","rowData3","parseFloat","replace"],"version":3,"file":"index.57bfd99f.js.map"}